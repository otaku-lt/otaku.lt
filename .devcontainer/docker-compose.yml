services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ../..:/workspaces:cached
      - otaku-node-modules:/workspaces/otaku.lt/node_modules
    command: sleep infinity
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - NODE_ENV=development
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.otaku.rule=Host(`otaku.localhost`)"
      - "traefik.http.routers.otaku.entrypoints=web"
      - "traefik.http.services.otaku.loadbalancer.server.port=3000"

  # Future database service (uncomment when needed)
  # postgres:
  #   image: postgres:15
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: otaku_dev
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - traefik

networks:
  traefik:
    driver: bridge

volumes:
  otaku-node-modules:
  # postgres-data:
